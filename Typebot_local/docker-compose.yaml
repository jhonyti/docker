version: "3.8"

x-typebot-common: &typebot-common
  restart: always
  depends_on:
    typebot-redis:
      condition: service_healthy
    typebot-db:
      condition: service_healthy
  networks:
    - typebot-net
  environment:
    REDIS_URL: redis://typebot-redis:6379
    ENCRYPTION_SECRET: "edrwEOgZ1IzkMZiaYgzmvSNKclY5iYpC"
    DATABASE_URL: "postgresql://postgres:typebot@typebot-db:5432/typebot"
    NODE_OPTIONS: "--no-node-snapshot"
    NEXTAUTH_URL: "http://typebot-builder:3001"
    NEXT_PUBLIC_VIEWER_URL: "http://typebot-viewer:3002"
    ADMIN_EMAIL: "semobsuporteti@gmail.com"
    DISABLE_SIGNUP: "true"
    SMTP_HOST: "smtp.gmail.com"
    SMTP_USERNAME: "semobsuporteti@gmail.com"
    SMTP_PASSWORD: "fbus oeat hlrm omjx"
    NEXT_PUBLIC_SMTP_FROM: "semobsuporteti@gmail.com"
    S3_ENDPOINT: "minio"
    S3_PORT: "9000"
    S3_ACCESS_KEY: "minio"
    S3_SECRET_KEY: "minio123"
    S3_BUCKET: "typebot"
    S3_REGION: "us-east-1"
    S3_SSL: "false"

services:
  typebot-db:
    container_name: typebot-db
    image: postgres:16
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "typebot"
      POSTGRES_PASSWORD: "typebot"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - typebot-net

  typebot-redis:
    container_name: typebot-redis
    image: redis:alpine
    restart: always
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis-data:/data
    networks:
      - typebot-net

  typebot-builder:
    container_name: typebot-builder
    <<: *typebot-common
    image: baptistearno/typebot-builder:latest
    ports:
      - "8080:3000"

  typebot-viewer:
    container_name: typebot-viewer
    <<: *typebot-common
    image: baptistearno/typebot-viewer:latest
    ports:
      - "8081:3000"
  
  minio:
    container_name: minio
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # Console Web
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - s3-data:/data
    networks:
      - typebot-net  # Usando a rede personalizada

  createbuckets:
    container_name: createbuckets
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 minio minio123;
      /usr/bin/mc mb minio/typebot;
      /usr/bin/mc anonymous set public minio/typebot/public;
      exit 0;
      "
    networks:
      - typebot-net
  
networks:
  typebot-net:
    external: true

volumes:
  s3-data:
    name: s3-data
  db-data:
    name: db-data
  redis-data:
    name: redis-data
